{"version":3,"sources":["data.js","Cart.js","App.js","serviceWorker.js","index.js"],"names":["id","title","content","price","connect","state","reducer","alertBox","reducer2","props","Table","responsive","map","a","i","key","name","quan","onClick","dispatch","type","data","className","aria-hidden","Detail","lazy","remainingContext","React","createContext","Card","useContext","history","useHistory","push","shoes","src","width","App","useState","Data","setShoes","remaining","setRemaining","Navbar","bg","expand","Brand","Link","as","to","Toggle","aria-controls","Collapse","Nav","exact","path","Jumbotron","Provider","value","axios","get","then","result","console","log","catch","fallback","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","initialState","store","createStore","combineReducers","action","found","findIndex","copy","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.355fee59.chunk.js","sourcesContent":["export default [\r\n  {\r\n    id : 0,\r\n    title : \"White and Black\",\r\n    content : \"Born in France\",\r\n    price : 120000\r\n  },\r\n\r\n  {\r\n    id : 1,\r\n    title : \"Red Knit\",\r\n    content : \"Born in Seoul\",\r\n    price : 110000\r\n  },\r\n\r\n  {\r\n    id : 2,\r\n    title : \"Grey Yordan\",\r\n    content : \"Born in the States\",\r\n    price : 130000\r\n  }\r\n]","import React, { useEffect, memo } from 'react';\r\nimport {Table} from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport './Detail.scss';\r\n\r\nfunction Cart(props) {\r\n  return (\r\n    <div>\r\n      <Table responsive>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>name</th>\r\n            <th>number</th>\r\n            <th>change</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n            props.state.map((a,i)=>{\r\n              return (\r\n                <tr key={i}>\r\n                  <td>{ a.id }</td>\r\n                  <td>{ a.name }</td>\r\n                  <td>{ a.quan }</td>\r\n                  <td>\r\n                    <button onClick={()=>{ props.dispatch({ type : 'add', data : a.id }) }}>+</button>\r\n                    <button onClick={()=>{ props.dispatch({ type : 'subtract', data : a.id }) }}>-</button> \r\n                  </td>\r\n                </tr>\r\n              )\r\n            })\r\n          }          \r\n        </tbody>\r\n      </Table>\r\n\r\n    {/* alert box  */}\r\n      { props.alertBox === true\r\n        ? (<div className=\"my-alert2\">\r\n          <p>alert box \r\n            <button className=\"close\" onClick={()=>{ props.dispatch({type : 'alert'}) }}>\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button> \r\n          </p>\r\n        </div>)\r\n        : null\r\n      }\r\n     </div>\r\n  )\r\n}\r\n\r\n\r\nfunction mapDispatchToProps (state){\r\n\r\n  return {\r\n    state : state.reducer,\r\n    alertBox : state.reducer2\r\n  }\r\n}\r\n\r\nexport default connect(mapDispatchToProps )(Cart)\r\n\r\n","/* eslint-disable */\n\nimport React, {useState, useEffect, useContext, lazy, Suspense} from 'react';\nimport { Navbar,Nav,NavDropdown,Button,Jumbotron,Alert } from 'react-bootstrap';\nimport './App.css';\nimport Data from './data.js';\n\nlet Detail = lazy(()=> import('./Detail.js') );\n\nimport axios from 'axios';\nimport { Link, Route, Switch, useHistory } from 'react-router-dom';\n\nimport {connect} from 'react-redux';\n\nimport Cart from './Cart.js';\n\nexport let remainingContext = React.createContext();\n\nfunction App() {\n\n  let [shoes, setShoes] = useState(Data);\n  let [remaining,setRemaining] = useState([10,11,12]);\n  let [cart, setCart] = useState([{ id : 0, name : 'newshoe', quan : 1}]);\n\n  return (\n\n    <div className=\"App\">\n\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand Link as={Link} to=\"/\">ShoeShop</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n            <Nav.Link as={Link} to=\"/cart\">Cart</Nav.Link>            \n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n\n    <Switch>\n\n      <Route exact path=\"/\">\n        <Jumbotron className=\"background\">\n          <h1>choose a shoes and order it. </h1>\n          <p>\n         Skills : react, redux, react-bootstrap, Sass\n          </p>    \n        </Jumbotron>\n\n        <div className=\"container\">\n\n          <remainingContext.Provider value={remaining}>\n\n          <div className=\"row\">\n            {\n              shoes.map((a,i)=>{\n                return (<Card shoes={shoes[i]} i={i} key={i} />)\n              })\n            }\n          </div>\n\n          </remainingContext.Provider>\n\n          <button className=\"btn btn-primary\" onClick={()=>{ \n\n            axios.get('https://codingapple1.github.io/shop/data2.json')\n            .then((result)=>{ \n              console.log(result.data);\n              setShoes( [...shoes, ...result.data ] );\n            })\n            .catch(()=>{ \n              console.log('failed')\n            })\n\n           }}>more</button>\n        </div>\n      </Route>\n\n      <Route path=\"/detail/:id\">\n\n        <remainingContext.Provider value={remaining}>\n          <Suspense fallback={<div>loading</div>}>\n            <Detail shoes={shoes} remaining={remaining} setRemaining={setRemaining}/>\n          </Suspense>\n         </remainingContext.Provider>\n\n      </Route>\n\n      <Route path=\"/cart\">\n        <Cart></Cart>\n      </Route>\n\n      <Route path=\"/:id\">\n        <div>click Home</div>\n      </Route>\n\n    </Switch>\n    </div>\n  );\n}\n\n\nfunction Card(props){\n\n  let remaining = useContext(remainingContext);\n  let history = useHistory();\n\n  return (\n    <div className=\"col-md-4\" onClick={()=>{ history.push('/detail/' + props.shoes.id) }}>\n      \n      <img src={ 'https://codingapple1.github.io/shop/shoes' + (props.i + 1) + '.jpg' } width=\"100%\" />\n      <h4>{ props.shoes.title }</h4>\n      <p>{ props.shoes.content } & { props.shoes.price }</p>     \n    </div>\n  )\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n{/* <remainingContext.Provider value={remaining}>  */}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter,HashRouter } from 'react-router-dom';\n\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers } from 'redux';\n\n\n// 👉Detail.js\nlet initialAlert = true;\n\nfunction reducer2(state = initialAlert, action) {\n  if (action.type === 'alert') {\n    state = false;\n    return state;\n  } else {\n    return state\n  }\n}\n\n\n// 👉Detail.js\nlet initialState = [\n  { id: 0, name: 'shoes', quan: 2 },\n  { id: 1, name: 'shoes2', quan: 1 },\n\n];\n\nfunction reducer(state = initialState, action) {\n  if (action.type === 'addshoes') {\n\n    let found = state.findIndex((a)=>{ return a.id === action.data.id });\n\n    if ( found >= 0 ){\n\n      let copy = [...state];\n      copy[found].quan++;\n      return copy\n\n    } else {\n      let copy = [...state];\n      copy.push(action.data);\n      return copy\n    }\n\n  } else if (action.type === 'add') {\n\n    let copy = [...state];\n    copy[action.data].quan++;\n    return copy\n\n\n  } else if (action.type === 'subtract') {\n    let copy = [...state];\n    copy[action.data].quan--;\n    return copy\n  } \n  \n  else {\n    return state\n  }\n}\n\nlet store = createStore(combineReducers({ reducer, reducer2 }));\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n\n\n\n\n"],"sourceRoot":""}